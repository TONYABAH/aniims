rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
     function isSignedIn() {
      return request.auth != null && request.auth.uid != null;
    }
    function userCreated() {
        return isSignedIn() && (resource.data.keys().hasAny(["CreatedBy"]) && resource.data.CreatedBy == request.auth.uid && resource.data.Status=="Created");
    }
    function isAdmin(){
      return isSignedIn() && request.auth.token.admin == true;
    }
    function canDelete(){
      return (userCreated() && resource.data.Status == "Created") || isAdmin();
    }

    match /Users/{id} {
      allow create: if false;
      allow get: if isSignedIn();
      allow list: if isSignedIn() && request.auth.token.level > 1;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    match /Units/{id} {
      allow create: if false;
      allow get: if isSignedIn();
      allow list: if isSignedIn() && request.auth.token.level > 1;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    match /applogs/{id} {
      allow create: if isSignedIn();
      allow get: if isSignedIn() && request.auth.token.level > 1;
      allow list: if isSignedIn() && request.auth.token.level > 1;
      allow delete: if isAdmin();
    }

    match /{collection}/{docId}/History/{id} {
      allow create: if isSignedIn();
      allow get: if isSignedIn();
      allow list: if isSignedIn();
    }
    match /{collection}/{docId}/Minutes/{id} {
      allow create: if isSignedIn();
      allow get: if isSignedIn();
      allow list: if isSignedIn();
    }
     match /Companies/{id} {
      allow create: if isSignedIn();
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow update: if isSignedIn() && request.auth.token.level > 2;
      allow delete: if canDelete();
    }
    match /Complaints/{id} {
      allow create: if isSignedIn();
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow update: if isSignedIn() && request.auth.token.level > 2
      allow delete: if canDelete();
    }
    match /Destructions/{id} {
      allow create: if isSignedIn();
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow update: if isSignedIn() && request.auth.token.level > 2
      allow delete: if canDelete();
    }
    match /{collection}/{id} {
      //function isDoc(){return collection in ["Mails", "Files","Complaints","Surveillances","Raids","Cases","Samples","Destructions","Payments"]}
      allow create: if isSignedIn();
      allow get: if isSignedIn() && request.auth.token.level > 2; //userCreated() || userDocument() || canReadUnitDocument() || isDirector() || isAdmin();
      allow list: if isSignedIn() && request.auth.token.level > 2; //userCreated() || userDocument() || canReadUnitDocument() || isDirector() || isAdmin();
      allow update: if isSignedIn() && request.auth.token.level > 2
      allow delete: if canDelete();
    }
  }
}
